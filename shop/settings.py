"""
Django settings for shop project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

from dotenv import load_dotenv
load_dotenv(dotenv_path=os.path.join(BASE_DIR, '.env'))

BUSINESS_NAME = os.getenv('BUSINESS_NAME')

# OPENPAY
OPEN_PAY_REDIRECT_URL = str(os.getenv('OPEN_PAY_REDIRECT_URL'))
OPEN_PAY_SUBSCRIPTION_REDIRECT_URL = str(os.getenv('OPEN_PAY_SUBSCRIPTION_REDIRECT_URL'))
OPEN_PAY_SANDBOX_ACTIVE = str(os.getenv('OPEN_PAY_SANDBOX_ACTIVE'))
OPEN_PAY_PUBLIC_KEY = str(os.getenv('OPEN_PAY_PUBLIC_KEY'))
OPEN_PAY_PRIVATE_KEY = str(os.getenv('OPEN_PAY_PRIVATE_KEY'))
OPEN_PAY_ID = str(os.getenv('OPEN_PAY_ID'))
# PayPal
PAYPAL_API_URL = str(os.getenv('PAYPAL_API_URL'))
PAYPAL_API_CLIENT_ID = str(os.getenv('PAYPAL_API_CLIENT_ID'))
PAYPAL_API_CLIENT_SECRET = str(os.getenv('PAYPAL_API_CLIENT_SECRET'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'w0ftw0u%1c=se2h*li_-58xh#(n+qf_nx)d60o*p-h#k09+3uy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

URL_SERVER = os.getenv('URL_SERVER')

LOGIN_REDIRECT_URL = '/dashboard/login'
ALLOWED_HOSTS = os.getenv('ALLOWED_HOST').split(',')
CORS_ORIGIN_ALLOW_ALL = True if str(os.getenv('CORS_ORIGIN_ALLOW_ALL')) in [
            'True', 'true', '1'] else True
CORS_ORIGIN_WHITELIST = os.getenv('CORS_ORIGIN_WHITELIST').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     'django.contrib.humanize',
    # Third party apps
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    # Own applications
    'shop.applications.api_v1'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 9
}

ROOT_URLCONF = 'shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATIC_PATH = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = (
    STATIC_PATH,
)
__STATIC_PATH = os.path.dirname(os.path.dirname(__file__))

STATIC_ROOT = os.path.join(__STATIC_PATH, "../static")

STATIC_URL = '/static/'

#   MEDIA FILES

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Email Section
DEFAULT_FROM_EMAIL = os.getenv('EMAIL_DEFAULT_FROM')
SERVER_EMAIL = os.getenv('EMAIL_HOST_USER')
EMAIL_USE_TLS = True
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = os.getenv('EMAIL_POST')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
EMAIL_CONTACT_FROM = os.getenv('EMAIL_CONTACT_FROM')

# USER SECTION

AUTH_USER_MODEL = 'api_v1.User'
